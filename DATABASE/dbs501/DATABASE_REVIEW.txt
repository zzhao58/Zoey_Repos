SET SERVEROUTPUT ON
SET VERIFY OFF

CREATE OR REPLACE FUNCTION GET_EMP_YRS(P_EMPID NUMBER)RETURN NUMBER
IS
    CURSOR C_JOBLIST IS
    SELECT NVL(TRUNC(MONTHS_BETWEEN(END_DATE, START_DATE)/12,1),0) v_yrs_job
    FROM JOB_HISTORY
    WHERE EMPLOYEE_ID = 176;

    V_YRS_SERVER NUMBER(3,1):=0;
    V_YRS_ON_JOB NUMBER(3,1);

BEGIN 
    SELECT TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)/12,1)
    INTO V_YRS_ON_JOB
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = P_EMPID;
    
    FOR ind IN C_JOBLIST
    LOOP
        V_YRS_SERVER:= V_YRS_SERVER + ind.v_yrs_job;
    END LOOP;
    
    V_YRS_SERVER:=V_YRS_SERVER+V_YRS_ON_JOB;
    RETURN V_YRS_SERVER;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN -1;
END GET_EMP_YRS;

1. EXECUTE DBMS_OUTPUT.PUT_LINE(GET_EMP_YRS(999)); -1
2. BEGIN
        DBMS_OUTPUT.PUT_LINE(' EMPLOYEE '||P_EMPID||' HAD WORKD FOR '||GET_EMP_YRS(106)||' YEARS IN THE COMPLANY ')
    END  18.2
3. VARIABLE B_YRS NUMBER
   EXECUTE :B_YRS:=GET_EMP_YRS(106);
   DBMS_OUTPUT.PUT_LINE(B_YRS)  18.2
4. SELECT LAST_NAME,GET_EMP_YRS(P_EMPID)
   FROM EMPLOYEES
   WHERE JOB_ID='SALES';
---------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE Add_job_history(p_empid NUMBER, p_newjob VARCHAR2) IS
    e_wrong_empid EXCEPTION;
BEGIN
    INSERT INTO JOB_HISTORY
    SELECT EMPLOYEE_ID, HIRE_DATE,SYADATE-1,JOB_ID, DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID=p_empid;
    
    IF SQL%ROWCOUNT=0 THEN
        RAISE e_wrong_empid;
    END IF;
    
    UPDATE EMPLOYEES
    SET JOB_ID=p_newjob,
        SALARY=(SELECT AVG(SALARY)+500
                FROM EMPLOEES
                WHERE JOB_ID=p_newjob)
    WHERE EMPLOYEE_ID=p_empid;
     DBMS_OUTPUT.PUT_LINE('Add');
      DBMS_OUTPUT.PUT_LINE('Add');
    EXCEPTION
        WHEN e_wrong_empid THEN
    DBMS_OUTPUT.PUT_LINE('');
        WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE();
END PROCEDURE;